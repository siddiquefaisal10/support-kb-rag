version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: supportkb-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpass123
      - MONGO_INITDB_DATABASE=supportkb
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: supportkb-api
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - MONGO_URI=mongodb://admin:adminpass123@mongodb:27017/supportkb?authSource=admin
      - DEFAULT_MODEL=mock
      - ENABLED_MODELS=mock,gemini,groq
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
      - RATE_LIMIT_WINDOW_MS=60000
      - RATE_LIMIT_MAX=60
    networks:
      - app-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: supportkb-web
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000
    networks:
      - app-network
    depends_on:
      api:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data: